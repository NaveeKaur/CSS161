1. Functional Decomposition: Use methods (a.k.a., functions) to break up a large program into meaningful chunks, using input to and output from those functions where appropriate.

2. Looping with Repetition Control Structures: Use two of the following structures: for, while, do/while, foreach.

3. Branching with Selection Control Structures: Use multiple (i.e., more than one) if/else and/or switch statements in your code. (You don’t need to use both kinds of statements. if/else means any kind of if/else statement.)

4. File I/O: Read from or write to a file in your software. Examples of this include be reading in a preset pattern for the computer opponent’s answers in a game of rock/paper/scissors, or writing a file that logs each move the player makes, effectively recording a history of the game.

5. Using Multiple Classes: Build and use more than one class in your project. Note that a class that only has a main method and does not have any instance variables or methods does not count as a “class” in this feature. Thus, if you have a driver class that only has a main method and you want credit for this feature, you need at least two other classes in addition to the driver class.

6. Multi-Dimensional Arrays: Make use of an array with a dimensionality greater than one.

